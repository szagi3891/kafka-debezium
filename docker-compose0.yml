version: '3.9'
services:
  # zookeeper:
  #   image: confluentinc/cp-zookeeper:7.5.1
  #   container_name: kafkadeb-zookeeper
  #   ports:
  #     - "2181:2181"
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000

  # kafka:
  #   image: confluentinc/cp-kafka:7.5.1
  #   container_name: kafkadeb-kafka
  #   ports:
  #     - "9092:9092"
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #   depends_on:
  #     - zookeeper

  # bez zookiper
  # kafka:
  #   image: confluentinc/cp-kafka:latest
  #   environment:
  #     - KAFKA_KRAFT_MODE=true
  #     # Usuń lub zakomentuj poniższą linię
  #     # - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
  #     - KAFKA_ADVERTISED_LISTENER=PLAINTEXT://localhost:9092
  #     - KAFKA_LISTENER_SECURITY_PROTOCOL=PLAINTEXT
  #     - KAFKA_LISTENER_PORT=9092
  #     - KAFKA_LISTENER_NAME=PLAINTEXT
  #     - KAFKA_LISTENER_INTER_BROKER_LISTENER_NAME=PLAINTEXT
  #     - KAFKA_LOG_DIRS=/var/lib/kafka/data
  #     - KAFKA_LOG_RETENTION_HOURS=168
  #     - KAFKA_LOG_SEGMENT_BYTES=1073741824
  #   ports:
  #     - "9092:9092"
  #   volumes:
  #     - /var/lib/kafka/data

  # https://hub.docker.com/r/bashj79/kafka-kraft
  # https://github.com/bashj79/kafka-kraft-docker

  kafka:
    image: bashj79/kafka-kraft
    ports:
      - "9092:9092"
      - "9101:9101"
    networks:
      - custom-network
    environment:
      # KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_LISTENER_NAMES: INSIDE
      # KAFKA_LISTENERS: INSIDE://0.0.0.0:9092

  magic:
    image: "digitsy/kafka-magic"
    ports:
      - "8080:80"
    # environment:
    #   KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://0.0.0.0:9092
    #   KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092


  aaa:
    image: "tchiotludo/akhq"
    ports:
      - "8080:8080"
    environment:
      AKHQ_CONFIGURATION__KAFKA__YOUR_CLUSTER_NAME__BOOTSTRAP_SERVERS: 9092
    volumes:
      - /tmp/application.yml:/app/application.yml

  bbb:
    image: obsidiandynamics/kafdrop
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
      CMD_ARGS: "--message.keyFormat=DEFAULT"

  # to chyba inny rodzaj kolejki ???
  # redpanda
  # ccc:
  #   image: docker.redpanda.com/redpandadata/console:latest
  #   ports:
  #     - "8080:8080"
  #   environment:
  #     # KAFKA_BROKERS: kafka:9092
  #     KAFKA_BROKERS: host.docker.internal:9092
  #     # KAFKA_BROKERS: PLAINTEXT://host.docker.internal:9092
  #   networks:
  #     - custom-network

  # ddd:
  #   image: consdata/kouncil:latest
  #   ports:
  #     - "80:8080"
  #   environment: 
  #     bootstrapServers: kafka:9092
  #     kouncil.auth.active-provider: inmemory


# -e AKHQ_CONFIGURATION__KAFKA__YOUR_CLUSTER_NAME__BOOTSTRAP_SERVERS=kafka:9092 

#docker run -d -e xeotek_kadeck_free="szeligagrzegorz@gmail.com" -e xeotek_kadeck_port=80 -p 80:80 --name kadeck -v kadeck_data:/root/.kadeck/ xeotek/kadeck:5.3.2

  #--name kadeck -v  

  ddd:
    container_name: kadeck
    image: xeotek/kadeck:5.3.2
    ports:
      - "80:80"
    environment:
      xeotek_kadeck_free: szeligagrzegorz@gmail.com
      xeotek_kadeck_port: 80
    networks:
      - custom-network
    volumes:
      - kadeck_data:/root/.kadeck/



  postgres:
    image: postgres:16.2-bullseye
    container_name: kafkadeb-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: debezium_user
      POSTGRES_PASSWORD: my_password
      POSTGRES_DB: my_database
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  kafka-connect:
    image: debezium/connect:2.4
    container_name: kafkadeb-kafka-connect
    ports:
      - "8083:8083"
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect-configs
      OFFSET_STORAGE_TOPIC: connect-offsets
      STATUS_STORAGE_TOPIC: connect-status
      KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      VALUE_CONVERTER_SCHEMAS_ENABLE: false
      KEY_CONVERTER_SCHEMAS_ENABLE: false
      PLUGIN_PATH: /kafka/connect
    volumes:
      - ./plugins:/kafka/connect
    depends_on:
      - kafka
      - postgres

volumes:
  postgres_data:
  kadeck_data:


networks:
  custom-network:
    driver: bridge

